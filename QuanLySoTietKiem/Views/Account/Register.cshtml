@model QuanLySoTietKiem.Models.AccountModels.RegisterModel.RegisterModel
@{
    ViewData["Title"] = "Đăng Ký";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Registration Form Section -->
<div class="py-5" style="background-color: #f8f9fa;">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-12 col-md-10 col-lg-8">
                <div class="card border-0 shadow-lg">
                    <!-- Card Header -->
                    <div class="card-header border-0 bg-gradient text-white p-4"
                        style="background: linear-gradient(45deg, #007bff, #00bcd4);">
                        <div class="d-flex align-items-center">
                            <div class="rounded-circle bg-white p-2 me-3">
                                <i class="bi bi-person-plus-fill text-primary fs-4"></i>
                            </div>
                            <div>
                                <h2 style="color: #080808;" class="mb-1 fw-bold">Tạo Tài Khoản Mới</h2>
                                <p style="color: #080808;" class="mb-0 opacity-75">Điền thông tin của bạn để bắt đầu
                                </p>
                            </div>
                        </div>
                    </div>

                    <!-- Card Body -->
                    <div class="card-body p-4">
                        <form asp-action="Register" method="post" class="needs-validation" novalidate>
                            @Html.AntiForgeryToken()

                            <!-- Personal Information Section -->
                            <div class="mb-4">
                                <h5 class="text-primary mb-3">
                                    <i class="bi bi-person-badge me-2"></i>Thông Tin Cá Nhân
                                </h5>
                                <div class="row g-3">
                                    <!-- Username Field -->
                                    <div class="col-md-6">
                                        <div class="form-floating">
                                            <input asp-for="UserName" class="form-control"
                                                placeholder="Nhập tên đăng nhập" />
                                            <label asp-for="UserName">Tên đăng nhập</label>
                                            <span asp-validation-for="UserName" class="text-danger"></span>
                                        </div>
                                    </div>

                                    <!-- Email Field -->
                                    <div class="col-md-6">
                                        <div class="form-floating">
                                            <input asp-for="Email" class="form-control" placeholder="Nhập email" />
                                            <label asp-for="Email">Địa chỉ Email</label>
                                            <span asp-validation-for="Email" class="text-danger"></span>
                                        </div>
                                    </div>

                                    <!-- Full Name Field -->
                                    <div class="col-md-6">
                                        <div class="form-floating">
                                            <input asp-for="FullName" class="form-control"
                                                placeholder="Nhập họ và tên" />
                                            <label asp-for="FullName">Họ và tên</label>
                                            <span asp-validation-for="FullName" class="text-danger"></span>
                                        </div>
                                    </div>

                                    <!-- Phone Number Field -->
                                    <div class="col-md-6">
                                        <div class="form-floating">
                                            <input asp-for="PhoneNumber" class="form-control"
                                                placeholder="Nhập số điện thoại" />
                                            <label asp-for="PhoneNumber">Số điện thoại</label>
                                            <span asp-validation-for="PhoneNumber" class="text-danger"></span>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Additional Information Section -->
                            <div class="mb-4">
                                <h5 class="text-primary mb-3">
                                    <i class="bi bi-card-text me-2"></i>Thông Tin Bổ Sung
                                </h5>
                                <div class="row g-3">
                                    <!-- ID Card Field -->
                                    <div class="col-md-6">
                                        <div class="form-floating">
                                            <input asp-for="CCCD" class="form-control" placeholder="Nhập CCCD" />
                                            <label asp-for="CCCD">Căn cước công dân (CCCD)</label>
                                            <span asp-validation-for="CCCD" class="text-danger"></span>
                                        </div>
                                    </div>

                                    <!-- Address Fields -->
                                    <div class="col-md-6">
                                        <div class="form-floating mb-2">
                                            <select id="province" class="form-select" aria-label="Chọn Tỉnh/Thành phố">
                                                <option value="">Chọn Tỉnh/Thành phố</option>
                                            </select>
                                            <label for="province">Tỉnh/Thành phố</label>
                                        </div>
                                        <div class="form-floating mb-2">
                                            <select id="district" class="form-select" aria-label="Chọn Quận/Huyện"
                                                disabled>
                                                <option value="">Chọn Quận/Huyện</option>
                                            </select>
                                            <label for="district">Quận/Huyện</label>
                                        </div>
                                        <div class="form-floating">
                                            <select id="ward" class="form-select" aria-label="Chọn Phường/Xã" disabled>
                                                <option value="">Chọn Phường/Xã</option>
                                            </select>
                                            <label for="ward">Phường/Xã</label>
                                        </div>
                                        <input asp-for="Address" type="hidden" id="fullAddress" />
                                        <span asp-validation-for="Address" class="text-danger"></span>
                                        <div id="addressWarning" class="address-warning">
                                            <i class="bi bi-info-circle me-1"></i>
                                            Địa chỉ đã được rút gọn để phù hợp với giới hạn 50 ký tự
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Security Section -->
                            <div class="mb-4">
                                <h5 class="text-primary mb-3">
                                    <i class="bi bi-shield-lock me-2"></i>Bảo Mật
                                </h5>
                                <div class="row g-3">
                                    <!-- Password Field -->
                                    <div class="col-md-6">
                                        <div class="form-floating">
                                            <input asp-for="Password" type="password" class="form-control"
                                                id="passwordInput" placeholder="Nhập mật khẩu" />
                                            <label asp-for="Password">Mật khẩu</label>
                                            <span asp-validation-for="Password" class="text-danger"></span>
                                            <button type="button"
                                                class="btn btn-link position-absolute end-0 top-50 translate-middle-y text-decoration-none"
                                                onclick="togglePasswordVisibility('passwordInput', 'togglePasswordIcon')"
                                                style="z-index: 5;">
                                                <i class="bi bi-eye-fill" id="togglePasswordIcon"></i>
                                            </button>
                                        </div>
                                    </div>

                                    <!-- Confirm Password Field -->
                                    <div class="col-md-6">
                                        <div class="form-floating">
                                            <input asp-for="ConfirmPassword" type="password" class="form-control"
                                                id="confirmPasswordInput" placeholder="Xác nhận mật khẩu" />
                                            <label asp-for="ConfirmPassword">Xác nhận mật khẩu</label>
                                            <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                                            <button type="button"
                                                class="btn btn-link position-absolute end-0 top-50 translate-middle-y text-decoration-none"
                                                onclick="togglePasswordVisibility('confirmPasswordInput', 'toggleConfirmPasswordIcon')"
                                                style="z-index: 5;">
                                                <i class="bi bi-eye-fill" id="toggleConfirmPasswordIcon"></i>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Action Buttons -->
                            <div class="d-flex justify-content-between align-items-center mt-4">
                                <a asp-controller="Account" asp-action="Login" class="btn btn-outline-secondary">
                                    <i class="bi bi-arrow-left me-2"></i>Quay lại đăng nhập
                                </a>
                                <button type="submit" class="btn btn-primary px-4 py-2">
                                    <i class="bi bi-person-plus-fill me-2"></i>Đăng ký tài khoản
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .form-select {
            padding-top: 1.625rem;
            padding-bottom: 0.625rem;
        }

        .form-floating>.form-select {
            padding-top: 1.625rem;
            padding-bottom: 0.625rem;
        }

        .address-warning {
            font-size: 0.875rem;
            color: #664d03;
            background-color: #fff3cd;
            padding: 0.5rem;
            border-radius: 0.25rem;
            margin-top: 0.5rem;
            display: none;
        }

        /* Animation classes */
        .fade-in-up {
            animation: fadeInUp 0.6s ease-out;
        }

        @@keyframes fadeInUp {
                from {
                    opacity: 0;
                    transform: translateY(20px);
                }

                to {
                    opacity: 1;
                    transform: translateY(0);
                }
            }

            /* Hover effects */
            .card {
                transition: transform 0.3s ease;
            }

            .card:hover {
                transform: translateY(-5px);
            }
        </style>
    }

    @section Scripts {
        <partial name="_ValidationScriptsPartial" />
        <script>
            function togglePasswordVisibility(inputId, iconId) {
                const input = document.getElementById(inputId);
                const icon = document.getElementById(iconId);

                if (input.type === 'password') {
                    input.type = 'text';
                    icon.classList.replace('bi-eye-fill', 'bi-eye-slash-fill');
                } else {
                    input.type = 'password';
                    icon.classList.replace('bi-eye-slash-fill', 'bi-eye-fill');
                }
            }

            // Vietnam Provinces API Integration
            const API_URL = 'https://provinces.open-api.vn/api';

            // Load provinces on page load
            async function loadProvinces() {
                try {
                    const response = await fetch(`${API_URL}/p`);
                    if (!response.ok) throw new Error('Failed to fetch provinces');
                    const provinces = await response.json();

                    const provinceSelect = document.getElementById('province');
                    provinces.forEach(province => {
                        const option = new Option(province.name, province.code);
                        provinceSelect.add(option);
                    });
                } catch (error) {
                    console.error('Error loading provinces:', error);
                    showError('Không thể tải danh sách tỉnh/thành phố. Vui lòng thử lại sau.');
                }
            }

            // Load districts based on selected province
            async function loadDistricts(provinceCode) {
                try {
                    const response = await fetch(`${API_URL}/p/${provinceCode}?depth=2`);
                    if (!response.ok) throw new Error('Failed to fetch districts');
                    const data = await response.json();

                    const districtSelect = document.getElementById('district');
                    const wardSelect = document.getElementById('ward');

                    // Reset selections
                    districtSelect.innerHTML = '<option value="">Chọn Quận/Huyện</option>';
                    wardSelect.innerHTML = '<option value="">Chọn Phường/Xã</option>';

                    // Enable/disable selects
                    districtSelect.disabled = false;
                    wardSelect.disabled = true;

                    // Add new options
                    data.districts.forEach(district => {
                        const option = new Option(district.name, district.code);
                        districtSelect.add(option);
                    });
                } catch (error) {
                    console.error('Error loading districts:', error);
                    showError('Không thể tải danh sách quận/huyện. Vui lòng thử lại sau.');
                }
            }

            // Load wards based on selected district
            async function loadWards(districtCode) {
                try {
                    const response = await fetch(`${API_URL}/d/${districtCode}?depth=2`);
                    if (!response.ok) throw new Error('Failed to fetch wards');
                    const data = await response.json();

                    const wardSelect = document.getElementById('ward');
                    wardSelect.innerHTML = '<option value="">Chọn Phường/Xã</option>';
                    wardSelect.disabled = false;

                    data.wards.forEach(ward => {
                        const option = new Option(ward.name, ward.code);
                        wardSelect.add(option);
                    });
                } catch (error) {
                    console.error('Error loading wards:', error);
                    showError('Không thể tải danh sách phường/xã. Vui lòng thử lại sau.');
                }
            }

            // Update full address when selections change
            function updateFullAddress() {
                const province = document.getElementById('province');
                const district = document.getElementById('district');
                const ward = document.getElementById('ward');

                if (province.selectedIndex > 0 && district.selectedIndex > 0 && ward.selectedIndex > 0) {
                    // Get the selected texts
                    const wardText = ward.options[ward.selectedIndex].text;
                    const districtText = district.options[district.selectedIndex].text;
                    const provinceText = province.options[province.selectedIndex].text;

                    // Remove common prefixes to shorten the text
                    const cleanWard = wardText.replace(/(Phường|Xã|Thị trấn)\s+/g, '');
                    const cleanDistrict = districtText.replace(/(Quận|Huyện|Thị xã|Thành phố)\s+/g, '');
                    const cleanProvince = provinceText.replace(/(Tỉnh|Thành phố)\s+/g, '');

                    // Combine with minimal separators
                    let fullAddress = `${cleanWard}, ${cleanDistrict}, ${cleanProvince}`;

                    // If still too long, truncate each part while maintaining readability
                    if (fullAddress.length > 50) {
                        // Calculate maximum length for each part (approximately 15 characters each plus separators)
                        const maxPartLength = 15;

                        const truncateText = (text, maxLength) => {
                            if (text.length <= maxLength) return text;
                            return text.substring(0, maxLength - 2) + '..';
                        };

                        fullAddress = `${truncateText(cleanWard, maxPartLength)}, ${truncateText(cleanDistrict, maxPartLength)}, ${truncateText(cleanProvince, maxPartLength)}`;
                    }

                    document.getElementById('fullAddress').value = fullAddress;

                    // Show warning if address was truncated
                    const addressWarning = document.getElementById('addressWarning');
                    if (addressWarning) {
                        addressWarning.style.display = fullAddress.includes('..') ? 'block' : 'none';
                    }
                }
            }

            // Show error message
            function showError(message) {
                // You can implement your preferred error display method here
                alert(message);
            }

            // Initialize event listeners
            document.addEventListener('DOMContentLoaded', () => {
                loadProvinces();

                // Province change event
                document.getElementById('province').addEventListener('change', (e) => {
                    if (e.target.value) {
                        loadDistricts(e.target.value);
                    } else {
                        document.getElementById('district').disabled = true;
                        document.getElementById('ward').disabled = true;
                    }
                    updateFullAddress();
                });

                // District change event
                document.getElementById('district').addEventListener('change', (e) => {
                    if (e.target.value) {
                        loadWards(e.target.value);
                    } else {
                        document.getElementById('ward').disabled = true;
                    }
                    updateFullAddress();
                });

                // Ward change event
                document.getElementById('ward').addEventListener('change', () => {
                    updateFullAddress();
                });
            });

            // Enable Bootstrap form validation
            (() => {
                'use strict'
                const forms = document.querySelectorAll('.needs-validation')
                Array.from(forms).forEach(form => {
                    form.addEventListener('submit', event => {
                        // Check if address is selected
                        const fullAddress = document.getElementById('fullAddress').value;
                        if (!fullAddress) {
                            event.preventDefault();
                            event.stopPropagation();
                            showError('Vui lòng chọn đầy đủ địa chỉ (Tỉnh/Thành phố, Quận/Huyện và Phường/Xã)');
                            return;
                        }

                        if (!form.checkValidity()) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false)
                })
            })()
        </script>
    }